luen2
luen8861
luen2@shirons.com

주말 과제 : projectEx에 DB연동하기
book_project에 로그인/회원가입 기능 추가하기

주제 및 프로젝트 기획안 작성 10/18(수)까지

본격적으로 프로젝스 수행.
코딩, 구현, 테스트, PPT 작성 10/26(목)까지
10/26(목) 1시에 발표

1. 소통 창구 수립

3 팀명: 시커머스

4. 주제 선정

만약 크롤링이 필요하다면 무엇을 가져올 것인가?

후보 1: 쇼핑몰. 상품 정보 DB에 저장. 검색. 
후보 2: 호텔, 모텔 등 여행 정보                   -
후보 3: 과외 매칭 학원			 
후보 4: 티켓 예매 사이트                                - -
후보 5: 스포티파이 API 노래 검색                    - - -


현재 할 수 있는 것 (능력이 되는 것):
DB에 저장된 정보를 검색조건에 맞춰 보여주는 것은 할 수 있다.

로그인/회원가입 유효성을 검사하여 DB에 사용자 정보를 추가할 수 있다.

사용할 기술 및 프로그램(?)
Django, MySQL




Spotify API가 할 수 있는 것

1. 검색 기능


연도별 노래 검색
가수명, 곡명, 곡id, 곡 인기도, 아티스트ID, 아티스트 인기도, 장르, 팔로워 수

ID : d95055726cab4d388a7eca1c84f4d7f9
SECRET: 0a29bcc039974031a517576cb8c9ad53


audio_feature()활용하여 '선호음악'에 앨범 띄우기



회원가입 폼 : 선호 장르 목록

POP
R&B
Rock
hip hop
jazz
latin
Acoustic
Classcial

album_id : album_result['items'][0]['id']
album_name : album_result['items'][0]['name']
album_artist : album_result['items'][0]['artists'][0]['name']
album_image : album_result['items'][0]['images']
album_release_date : album_result['items'][0]['release_date']



데이터 입출력 방식 생각정리

처음 생각한 것 : 페이지를 요청할 때마다 API에서 검색을 돌려 얻은 정보를 페이지에 그냥 출력

수정한 구조 : 페이지를 요청하면 API에서 검색된 결과를 DB에 저장한 뒤 출력. => 페이지를 요청할 때마다 API가 검색 함수 호출하고 DB에 저장해야 하는가? X 안된다. 중복값이 다른 id로 들어가 구분이 힘들어지게 된다.



프로젝트 시작 전 데이터 전처리 작업

1. 크롤링으로 우선 앨범만 긁어와 DB에 넣는다. 1000개든 2000개든 간에...
2. 마찬가지로 앨범 id로 들어가 track 정보를 긁어와 track DB에 추가한다.

그럼 album과 track 테이블에 데이터가 찬다.

audio_feature 테이블의 존재 의미 : 유저가 플레이리스트에 올렸거나 비교하고 싶은 곡의 그래프 데이터를 확인하려 할 때, 그 곡의 audio_feature 정보들이 테이블에 올라간다.

장르별 테이블 : 마찬가지로 해당 장르의 앨범들을 크롤링해 넣는다. 비교를 위해서.



앨범 크롤링 시작

Jazz, Alternative, J-POP
