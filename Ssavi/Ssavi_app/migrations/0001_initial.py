<<<<<<< HEAD
# Generated by Django 4.2.6 on 2023-10-19 02:05
=======
# Generated by Django 4.2.6 on 2023-10-23 05:20
>>>>>>> ltj

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Albums',
            fields=[
                ('album_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('album_name', models.CharField(blank=True, max_length=150, null=True)),
                ('album_artist', models.CharField(blank=True, max_length=50, null=True)),
                ('album_genre', models.CharField(blank=True, max_length=50, null=True)),
                ('album_image', models.CharField(blank=True, max_length=150, null=True)),
                ('album_release_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'albums',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alternative',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alternative',
                'managed': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
=======
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
>>>>>>> ltj
            name='Electro',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'electro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hiphop',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hiphop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Indiepop',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'indiepop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jazz',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'jazz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jpop',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'jpop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kpop',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kpop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KwdSearch',
            fields=[
                ('search_no', models.BigAutoField(primary_key=True, serialize=False)),
                ('album_kw', models.CharField(blank=True, max_length=100, null=True)),
                ('track_kw', models.CharField(blank=True, max_length=100, null=True)),
                ('genre_kw', models.CharField(blank=True, max_length=100, null=True)),
                ('artist_kw', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'kwd_search',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Latin',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'latin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LikedAlbum',
            fields=[
                ('la_no', models.AutoField(db_column='LA_no', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'liked_album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
=======
            name='LikedTrack',
            fields=[
                ('lt_no', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'liked_track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
>>>>>>> ltj
            name='PlayList',
            fields=[
                ('playlist_no', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'play_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rnb',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rnb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rock',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tracks',
            fields=[
                ('track_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('track_name', models.CharField(blank=True, max_length=150, null=True)),
                ('track_preview', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'tracks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersAppUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
                ('user_name', models.CharField(max_length=100)),
                ('user_genre', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'users_app_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
=======
            name='UsersAppUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'users_app_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersAppUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'users_app_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
>>>>>>> ltj
            name='AudioFeatures',
            fields=[
                ('track', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Ssavi_app.tracks')),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'audio_features',
                'managed': False,
            },
        ),
    ]
